literaturedata_2010      <-   file.path("nobelprize_lit/2010")
nobel_literature_1940         <- Corpus(DirSource(literaturedata_1940))
nobel_literature_1950         <- Corpus(DirSource(literaturedata_1950))
nobel_literature_1960         <- Corpus(DirSource(literaturedata_1960))
nobel_literature_1970         <- Corpus(DirSource(literaturedata_1970))
nobel_literature_1980         <- Corpus(DirSource(literaturedata_1980))
nobel_literature_1990         <- Corpus(DirSource(literaturedata_1990))
nobel_literature_2000         <- Corpus(DirSource(literaturedata_2000))
nobel_literature_2010         <- Corpus(DirSource(literaturedata_2010))
#store speeches by decades in list
nobel_peace_bydecade <- list(
nobel_peace_1940,
nobel_peace_1950,
nobel_peace_1960,
nobel_peace_1970,
nobel_peace_1980,
nobel_peace_1990,
nobel_peace_2000,
nobel_peace_2010
)
nobel_literature_bydecade <- list(
nobel_literature_1940,
nobel_literature_1950,
nobel_literature_1960,
nobel_literature_1970,
nobel_literature_1980,
nobel_literature_1990,
nobel_literature_2000,
nobel_literature_2010
)
#### min variables for analysis
#plotting frame for all nobel prizes
years          <- seq(1940, 2010, 10)
frequencies    <- c(1:length(years))
numberofwords  <- 5
### key functions used
#select the most frequent words out of corpus.
frequentwordsincorpus <- function (x)
{
#all speeches
nobel_prize    <- x
#preprocessing
#remove number, capitalisation, common words, puntucation, other meaningless bits.
nobel_prize  <- tm_map(nobel_prize, removePunctuation)
nobel_prize  <- tm_map(nobel_prize, removeNumbers)
nobel_prize  <- tm_map(nobel_prize, tolower)#lowercase
nobel_prize  <- tm_map(nobel_prize, removeWords, stopwords("english"))
nobel_prize  <- tm_map(nobel_prize, stemDocument)
nobel_prize  <- tm_map(nobel_prize, stripWhitespace)
nobel_prize  <- tm_map(nobel_prize, PlainTextDocument)
#stage the data
dtm   <- DocumentTermMatrix(nobel_prize)
tdm   <- TermDocumentMatrix(nobel_prize)
#removing sparse terms
dtms  <- removeSparseTerms(dtm, 0.1)
#Clustering by Term Similarity
dtmss <- removeSparseTerms(dtm, 0.15) # This makes a matrix that is only 15% empty space, maximum.
#findFreqTerms(dtms, lowfreq=50)
freq  <- colSums(as.matrix(dtms))
freq
freq  <- sort(colSums(as.matrix(dtm)), decreasing = TRUE)
wf    <- data.frame(word = names(freq), freq = freq)
#frequencies are key outcome of the pre-processing
mostfrequentwords50                <- wf[1:50,]
#mostfrequentwords15               <- freq[tail(ord)]
return(mostfrequentwords50)
}
#matrix with top words x years in decades
compute_word_frequencies_topfive_byyear <- function (x) {
#dataframe empty to be filled
word_frequencies_topfive_byyear           <- data.frame(matrix(0, ncol = 8, nrow = length(x)), row.names = x)
colnames(word_frequencies_topfive_byyear) <- years
#fill datafran
for (i in 1:length(nobel_peace_bydecade)) {
count       <- i
nobel_prize <- nobel_peace_bydecade[[count]]
mostfrequentwords <- frequentwordsincorpus(nobel_prize)
#create entries of each word(row) for each decade
for (j in x) {
# count+1 since the first oclumn is the word
word_frequencies_topfive_byyear[j, count]     <- mostfrequentwords[j, 'freq']
}
}
#goal is dataframe of frequencies
return(word_frequencies_topfive_byyear)
}
#Part A: all speeches
#all speeches, most frequent words
peace_mostfrequentwords50      <- frequentwordsincorpus(nobel_peace)
literature_mostfrequentwords50 <- frequentwordsincorpus(nobel_literature)
#Part B: Sub-analysis for frequencies by decade
#most frequent words for prize overall through whole history
peace_word_frequencies_topfive        <- as.character(peace_mostfrequentwords50$word[1:numberofwords])
literature_frequencies_topfive        <- as.character(literature_mostfrequentwords50$word[1:numberofwords])
#setup matrices word x decades
peace_word_by_decades      <- compute_word_frequencies_topfive_byyear(peace_word_frequencies_topfive)
literature_word_by_decades <- compute_word_frequencies_topfive_byyear(literature_frequencies_topfive)
#Part A: all speeches
#all speeches, most frequent words
peace_mostfrequentwords50      <- frequentwordsincorpus(nobel_peace)
#load texts for all years per prize
peacedata           <- file.path("nobelprize_pea/1940_2016")
literaturedata      <- file.path("nobelprize_lit/1949_2016")
nobel_peace         <- Corpus(DirSource(peacedata))
nobel_literature    <- Corpus(DirSource(literaturedata))
#load texts for each decade separatly per prize
peacedata_1940      <-   file.path("nobelprize_pea/1940")
peacedata_1950      <-   file.path("nobelprize_pea/1950")
peacedata_1960      <-   file.path("nobelprize_pea/1960")
peacedata_1970      <-   file.path("nobelprize_pea/1970")
peacedata_1980      <-   file.path("nobelprize_pea/1980")
peacedata_1990      <-   file.path("nobelprize_pea/1990")
peacedata_2000      <-   file.path("nobelprize_pea/2000")
peacedata_2010      <-   file.path("nobelprize_pea/2010")
nobel_peace_1940         <- Corpus(DirSource(peacedata_1940))
nobel_peace_1950         <- Corpus(DirSource(peacedata_1950))
nobel_peace_1960         <- Corpus(DirSource(peacedata_1960))
nobel_peace_1970         <- Corpus(DirSource(peacedata_1970))
nobel_peace_1980         <- Corpus(DirSource(peacedata_1980))
nobel_peace_1990         <- Corpus(DirSource(peacedata_1990))
nobel_peace_2000         <- Corpus(DirSource(peacedata_2000))
nobel_peace_2010         <- Corpus(DirSource(peacedata_2010))
literaturedata_1940      <-   file.path("nobelprize_lit/1940")
literaturedata_1950      <-   file.path("nobelprize_lit/1950")
literaturedata_1960      <-   file.path("nobelprize_lit/1960")
literaturedata_1970      <-   file.path("nobelprize_lit/1970")
literaturedata_1980      <-   file.path("nobelprize_lit/1980")
literaturedata_1990      <-   file.path("nobelprize_lit/1990")
literaturedata_2000      <-   file.path("nobelprize_lit/2000")
literaturedata_2010      <-   file.path("nobelprize_lit/2010")
nobel_literature_1940         <- Corpus(DirSource(literaturedata_1940))
nobel_literature_1950         <- Corpus(DirSource(literaturedata_1950))
nobel_literature_1960         <- Corpus(DirSource(literaturedata_1960))
nobel_literature_1970         <- Corpus(DirSource(literaturedata_1970))
nobel_literature_1980         <- Corpus(DirSource(literaturedata_1980))
nobel_literature_1990         <- Corpus(DirSource(literaturedata_1990))
nobel_literature_2000         <- Corpus(DirSource(literaturedata_2000))
nobel_literature_2010         <- Corpus(DirSource(literaturedata_2010))
#store speeches by decades in list
nobel_peace_bydecade <- list(
nobel_peace_1940,
nobel_peace_1950,
nobel_peace_1960,
nobel_peace_1970,
nobel_peace_1980,
nobel_peace_1990,
nobel_peace_2000,
nobel_peace_2010
)
nobel_literature_bydecade <- list(
nobel_literature_1940,
nobel_literature_1950,
nobel_literature_1960,
nobel_literature_1970,
nobel_literature_1980,
nobel_literature_1990,
nobel_literature_2000,
nobel_literature_2010
)
nobel_literature_bydecade
nobel_literature_1940
#### min variables for analysis
#plotting frame for all nobel prizes
years          <- seq(1940, 2010, 10)
frequencies    <- c(1:length(years))
numberofwords  <- 5
### key functions used
#select the most frequent words out of corpus.
frequentwordsincorpus <- function (x)
{
#all speeches
nobel_prize    <- x
#preprocessing
#remove number, capitalisation, common words, puntucation, other meaningless bits.
nobel_prize  <- tm_map(nobel_prize, removePunctuation)
nobel_prize  <- tm_map(nobel_prize, removeNumbers)
nobel_prize  <- tm_map(nobel_prize, tolower)#lowercase
nobel_prize  <- tm_map(nobel_prize, removeWords, stopwords("english"))
nobel_prize  <- tm_map(nobel_prize, stemDocument)
nobel_prize  <- tm_map(nobel_prize, stripWhitespace)
nobel_prize  <- tm_map(nobel_prize, PlainTextDocument)
#stage the data
dtm   <- DocumentTermMatrix(nobel_prize)
tdm   <- TermDocumentMatrix(nobel_prize)
#removing sparse terms
dtms  <- removeSparseTerms(dtm, 0.1)
#Clustering by Term Similarity
dtmss <- removeSparseTerms(dtm, 0.15) # This makes a matrix that is only 15% empty space, maximum.
#findFreqTerms(dtms, lowfreq=50)
freq  <- colSums(as.matrix(dtms))
freq
freq  <- sort(colSums(as.matrix(dtm)), decreasing = TRUE)
wf    <- data.frame(word = names(freq), freq = freq)
#frequencies are key outcome of the pre-processing
mostfrequentwords50                <- wf[1:50,]
#mostfrequentwords15               <- freq[tail(ord)]
return(mostfrequentwords50)
}
#matrix with top words x years in decades
compute_word_frequencies_topfive_byyear <- function (x) {
#dataframe empty to be filled
word_frequencies_topfive_byyear           <- data.frame(matrix(0, ncol = 8, nrow = length(x)), row.names = x)
colnames(word_frequencies_topfive_byyear) <- years
#fill datafran
for (i in 1:length(nobel_peace_bydecade)) {
count       <- i
nobel_prize <- nobel_peace_bydecade[[count]]
mostfrequentwords <- frequentwordsincorpus(nobel_prize)
#create entries of each word(row) for each decade
for (j in x) {
# count+1 since the first oclumn is the word
word_frequencies_topfive_byyear[j, count]     <- mostfrequentwords[j, 'freq']
}
}
#goal is dataframe of frequencies
return(word_frequencies_topfive_byyear)
}
#Part A: all speeches
#all speeches, most frequent words
peace_mostfrequentwords50      <- frequentwordsincorpus(nobel_peace)
?tm_map
### key functions used
#select the most frequent words out of corpus.
frequentwordsincorpus <- function (x)
{
#all speeches
nobel_prize    <- x
#preprocessing
#remove number, capitalisation, common words, puntucation, other meaningless bits.
nobel_prize  <- tm_map(nobel_prize, removePunctuation)
nobel_prize  <- tm_map(nobel_prize, removeNumbers)
nobel_prize  <- tm_map(nobel_prize, tolower)#lowercase
nobel_prize  <- tm_map(nobel_prize, removeWords, stopwords("english"))
nobel_prize  <- tm_map(nobel_prize, stemDocument)
nobel_prize  <- tm_map(nobel_prize, stripWhitespace)
# nobel_prize  <- tm_map(nobel_prize, PlainTextDocument)
#stage the data
dtm   <- DocumentTermMatrix(nobel_prize)
tdm   <- TermDocumentMatrix(nobel_prize)
#removing sparse terms
dtms  <- removeSparseTerms(dtm, 0.1)
#Clustering by Term Similarity
dtmss <- removeSparseTerms(dtm, 0.15) # This makes a matrix that is only 15% empty space, maximum.
#findFreqTerms(dtms, lowfreq=50)
freq  <- colSums(as.matrix(dtms))
freq
freq  <- sort(colSums(as.matrix(dtm)), decreasing = TRUE)
wf    <- data.frame(word = names(freq), freq = freq)
#frequencies are key outcome of the pre-processing
mostfrequentwords50                <- wf[1:50,]
#mostfrequentwords15               <- freq[tail(ord)]
return(mostfrequentwords50)
}
#matrix with top words x years in decades
compute_word_frequencies_topfive_byyear <- function (x) {
#dataframe empty to be filled
word_frequencies_topfive_byyear           <- data.frame(matrix(0, ncol = 8, nrow = length(x)), row.names = x)
colnames(word_frequencies_topfive_byyear) <- years
#fill datafran
for (i in 1:length(nobel_peace_bydecade)) {
count       <- i
nobel_prize <- nobel_peace_bydecade[[count]]
mostfrequentwords <- frequentwordsincorpus(nobel_prize)
#create entries of each word(row) for each decade
for (j in x) {
# count+1 since the first oclumn is the word
word_frequencies_topfive_byyear[j, count]     <- mostfrequentwords[j, 'freq']
}
}
#goal is dataframe of frequencies
return(word_frequencies_topfive_byyear)
}
#Part A: all speeches
#all speeches, most frequent words
peace_mostfrequentwords50      <- frequentwordsincorpus(nobel_peace)
literature_mostfrequentwords50 <- frequentwordsincorpus(nobel_literature)
#Part B: Sub-analysis for frequencies by decade
#most frequent words for prize overall through whole history
peace_word_frequencies_topfive        <- as.character(peace_mostfrequentwords50$word[1:numberofwords])
literature_frequencies_topfive        <- as.character(literature_mostfrequentwords50$word[1:numberofwords])
#setup matrices word x decades
peace_word_by_decades      <- compute_word_frequencies_topfive_byyear(peace_word_frequencies_topfive)
literature_word_by_decades <- compute_word_frequencies_topfive_byyear(literature_frequencies_topfive)
#dataframe for plotting in ggvis package
peace_word_frequencies_topfive        <- data.frame(t(peace_word_by_decades))
peace_word_frequencies_topfive$years  <- rownames(peace_word_frequencies_topfive)
peace_column_names                    <- c(names(peace_word_frequencies_topfive))
literature_word_frequencies_topfive        <- data.frame(t(literature_word_by_decades))
literature_word_frequencies_topfive$years  <- rownames(literature_word_frequencies_topfive)
literature_column_names               <- c(names(literature_word_frequencies_topfive))
#scatterplotmatrix, drop the 'years' string
pairs.panels(peace_word_frequencies_topfive[ , - 6])
pairs.panels(literature_word_frequencies_topfive[ , - 6])
#plot
peace_word_frequencies_topfive %>% ggvis(~years, ~peace_word_frequencies_topfive[ , 1]) %>% layer_lines(stroke = literature_column_names[1]) %>% add_axis("x", title = "Importance of words in peace nobel prize for peace speeches(by decades)") %>% add_axis("y", title = "Word frequency") %>% layer_paths(y = ~peace_word_frequencies_topfive[ , 2], stroke = literature_column_names[2]) %>% layer_paths(y = ~peace_word_frequencies_topfive[ , 3], stroke = literature_column_names[3]) %>% layer_paths(y = ~peace_word_frequencies_topfive[ , 4], stroke = literature_column_names[4]) %>% layer_paths(y = ~peace_word_frequencies_topfive[ , 5], stroke = literature_column_names[5])
pairs.panels(peace_word_frequencies_topfive[ , - 6])
install.packages("jsonlite")
install.packages("jsonlite")
peace_word_frequencies_topfive %>% ggvis(~years, ~peace_word_frequencies_topfive[ , 1]) %>% layer_lines(stroke = literature_column_names[1])
peace_word_frequencies_topfive %>% ggvis(~years, ~peace_word_frequencies_topfive[ , 1]) %>% layer_lines(stroke = literature_column_names[1]) %>% add_axis("x", title = "Importance of words in peace nobel prize for peace speeches(by decades)") %>% add_axis("y", title = "Word frequency") %>% layer_paths(y = ~peace_word_frequencies_topfive[ , 2], stroke = literature_column_names[2]) %>% layer_paths(y = ~peace_word_frequencies_topfive[ , 3], stroke = literature_column_names[3]) %>% layer_paths(y = ~peace_word_frequencies_topfive[ , 4], stroke = literature_column_names[4]) %>% layer_paths(y = ~peace_word_frequencies_topfive[ , 5], stroke = literature_column_names[5])
library(flexdashboard)
# Source and Context  --------------------------------------------------------------
# Purpose
# Show Trends and changes in the content and kind of recipents of nobel prizes.
# Use the Nobel Prize as a window in the changes in science, humanities and geo-politics of the 20th and early 21st century.
# Show the value that is hidden in publicly available data
# workflow: download from github, reproduce early graphs, orderthrough layout, re-factor the code basis, include the missing years' data, identify highlights, write up of key findings, structure a medium article about the topic
# Packages:
pacman::p_load(cluster, fpc, ggplot2, ggvis, SnowballC, tm, wordcloud)
#load texts for all years per prize
peacedata           <- file.path("nobelprize_pea/1940_2016")
literaturedata      <- file.path("nobelprize_lit/1949_2016")
nobel_peace         <- Corpus(DirSource(peacedata))
nobel_literature    <- Corpus(DirSource(literaturedata))
#load texts for each decade separatly per prize
peacedata_1940      <-   file.path("nobelprize_pea/1940")
peacedata_1950      <-   file.path("nobelprize_pea/1950")
peacedata_1960      <-   file.path("nobelprize_pea/1960")
peacedata_1970      <-   file.path("nobelprize_pea/1970")
peacedata_1980      <-   file.path("nobelprize_pea/1980")
peacedata_1990      <-   file.path("nobelprize_pea/1990")
peacedata_2000      <-   file.path("nobelprize_pea/2000")
peacedata_2010      <-   file.path("nobelprize_pea/2010")
literaturedata_1940      <-   file.path("nobelprize_lit/1940")
literaturedata_1950      <-   file.path("nobelprize_lit/1950")
literaturedata_1960      <-   file.path("nobelprize_lit/1960")
literaturedata_1970      <-   file.path("nobelprize_lit/1970")
literaturedata_1980      <-   file.path("nobelprize_lit/1980")
literaturedata_1990      <-   file.path("nobelprize_lit/1990")
literaturedata_2000      <-   file.path("nobelprize_lit/2000")
literaturedata_2010      <-   file.path("nobelprize_lit/2010")
nobel_peace_1940         <- Corpus(DirSource(peacedata_1940))
nobel_peace_1950         <- Corpus(DirSource(peacedata_1950))
nobel_peace_1960         <- Corpus(DirSource(peacedata_1960))
nobel_peace_1970         <- Corpus(DirSource(peacedata_1970))
nobel_peace_1980         <- Corpus(DirSource(peacedata_1980))
nobel_peace_1990         <- Corpus(DirSource(peacedata_1990))
nobel_peace_2000         <- Corpus(DirSource(peacedata_2000))
nobel_peace_2010         <- Corpus(DirSource(peacedata_2010))
nobel_literature_1940         <- Corpus(DirSource(literaturedata_1940))
nobel_literature_1950         <- Corpus(DirSource(literaturedata_1950))
nobel_literature_1960         <- Corpus(DirSource(literaturedata_1960))
nobel_literature_1970         <- Corpus(DirSource(literaturedata_1970))
nobel_literature_1980         <- Corpus(DirSource(literaturedata_1980))
nobel_literature_1990         <- Corpus(DirSource(literaturedata_1990))
nobel_literature_2000         <- Corpus(DirSource(literaturedata_2000))
nobel_literature_2010         <- Corpus(DirSource(literaturedata_2010))
#store speeches by decades in list
nobel_peace_bydecade <- list(
nobel_peace_1940,
nobel_peace_1950,
nobel_peace_1960,
nobel_peace_1970,
nobel_peace_1980,
nobel_peace_1990,
nobel_peace_2000,
nobel_peace_2010
)
nobel_literature_bydecade <- list(
nobel_literature_1940,
nobel_literature_1950,
nobel_literature_1960,
nobel_literature_1970,
nobel_literature_1980,
nobel_literature_1990,
nobel_literature_2000,
nobel_literature_2010
)
?file.path
?Corpus
library(flexdashboard)
# Source and Context  --------------------------------------------------------------
# Purpose
# Show Trends and changes in the content and kind of recipents of nobel prizes.
# Use the Nobel Prize as a window in the changes in science, humanities and geo-politics of the 20th and early 21st century.
# Show the value that is hidden in publicly available data
# workflow: download from github, reproduce early graphs, orderthrough layout, re-factor the code basis, include the missing years' data, identify highlights, write up of key findings, re-calculate the relative contributions  suing the recent packages, structure a medium article about the topic
# Packages:
pacman::p_load(cluster, fpc, ggplot2, ggvis, SnowballC, tm, wordcloud)
# Load data:
peacedata           <- file.path("nobelprize_pea/1940_2016")
literaturedata      <- file.path("nobelprize_lit/1949_2016")
#load texts for each decade separatly per prize
peacedata_1940          <-   file.path("nobelprize_pea/1940")
peacedata_1950          <-   file.path("nobelprize_pea/1950")
peacedata_1960          <-   file.path("nobelprize_pea/1960")
peacedata_1970          <-   file.path("nobelprize_pea/1970")
peacedata_1980          <-   file.path("nobelprize_pea/1980")
peacedata_1990          <-   file.path("nobelprize_pea/1990")
peacedata_2000          <-   file.path("nobelprize_pea/2000")
peacedata_2010          <-   file.path("nobelprize_pea/2010")
literaturedata_1940     <-   file.path("nobelprize_lit/1940")
literaturedata_1950     <-   file.path("nobelprize_lit/1950")
literaturedata_1960     <-   file.path("nobelprize_lit/1960")
literaturedata_1970     <-   file.path("nobelprize_lit/1970")
literaturedata_1980     <-   file.path("nobelprize_lit/1980")
literaturedata_1990     <-   file.path("nobelprize_lit/1990")
literaturedata_2000     <-   file.path("nobelprize_lit/2000")
literaturedata_2010     <-   file.path("nobelprize_lit/2010")
# Functions, variables and parameters:
years          <- seq(1940, 2010, 10)
frequencies    <- c(1:length(years))
numberofwords  <- 5
#select the most frequent words out of corpus.
frequentwordsincorpus <- function (x)
{
#all speeches
nobel_prize    <- x
#preprocessing
#remove number, capitalisation, common words, puntucation, other meaningless bits.
nobel_prize  <- tm_map(nobel_prize, removePunctuation)
nobel_prize  <- tm_map(nobel_prize, removeNumbers)
nobel_prize  <- tm_map(nobel_prize, tolower)#lowercase
nobel_prize  <- tm_map(nobel_prize, removeWords, stopwords("english"))
nobel_prize  <- tm_map(nobel_prize, stemDocument)
nobel_prize  <- tm_map(nobel_prize, stripWhitespace)
# nobel_prize  <- tm_map(nobel_prize, PlainTextDocument)
#stage the data
dtm   <- DocumentTermMatrix(nobel_prize)
tdm   <- TermDocumentMatrix(nobel_prize)
#removing sparse terms
dtms  <- removeSparseTerms(dtm, 0.1)
#Clustering by Term Similarity
dtmss <- removeSparseTerms(dtm, 0.15) # This makes a matrix that is only 15% empty space, maximum.
#findFreqTerms(dtms, lowfreq=50)
freq  <- colSums(as.matrix(dtms))
freq
freq  <- sort(colSums(as.matrix(dtm)), decreasing = TRUE)
wf    <- data.frame(word = names(freq), freq = freq)
#frequencies are key outcome of the pre-processing
mostfrequentwords50                <- wf[1:50,]
#mostfrequentwords15               <- freq[tail(ord)]
return(mostfrequentwords50)
}
#matrix with top words x years in decades
compute_word_frequencies_topfive_byyear <- function (x) {
#dataframe empty to be filled
word_frequencies_topfive_byyear           <- data.frame(matrix(0, ncol = 8, nrow = length(x)), row.names = x)
colnames(word_frequencies_topfive_byyear) <- years
#fill datafran
for (i in 1:length(nobel_peace_bydecade)) {
count       <- i
nobel_prize <- nobel_peace_bydecade[[count]]
mostfrequentwords <- frequentwordsincorpus(nobel_prize)
#create entries of each word(row) for each decade
for (j in x) {
# count+1 since the first oclumn is the word
word_frequencies_topfive_byyear[j, count]     <- mostfrequentwords[j, 'freq']
}
}
#goal is dataframe of frequencies
return(word_frequencies_topfive_byyear)
}
# data transformation:
nobel_peace                   <- tm::Corpus(DirSource(peacedata))
nobel_literature              <- tm::Corpus(DirSource(literaturedata))
nobel_peace_1940              <- tm::Corpus(DirSource(peacedata_1940))
nobel_peace_1950              <- tm::Corpus(DirSource(peacedata_1950))
nobel_peace_1960              <- tm::Corpus(DirSource(peacedata_1960))
nobel_peace_1970              <- tm::Corpus(DirSource(peacedata_1970))
nobel_peace_1980              <- tm::Corpus(DirSource(peacedata_1980))
nobel_peace_1990              <- tm::Corpus(DirSource(peacedata_1990))
nobel_peace_2000              <- tm::Corpus(DirSource(peacedata_2000))
nobel_peace_2010              <- tm::Corpus(DirSource(peacedata_2010))
nobel_literature_1940         <- tm::Corpus(DirSource(literaturedata_1940))
nobel_literature_1950         <- tm::Corpus(DirSource(literaturedata_1950))
nobel_literature_1960         <- tm::Corpus(DirSource(literaturedata_1960))
nobel_literature_1970         <- tm::Corpus(DirSource(literaturedata_1970))
nobel_literature_1980         <- tm::Corpus(DirSource(literaturedata_1980))
nobel_literature_1990         <- tm::Corpus(DirSource(literaturedata_1990))
nobel_literature_2000         <- tm::Corpus(DirSource(literaturedata_2000))
nobel_literature_2010         <- tm::Corpus(DirSource(literaturedata_2010))
#store speeches by decades in list
nobel_peace_bydecade <- list(
nobel_peace_1940,
nobel_peace_1950,
nobel_peace_1960,
nobel_peace_1970,
nobel_peace_1980,
nobel_peace_1990,
nobel_peace_2000,
nobel_peace_2010
)
nobel_literature_bydecade <- list(
nobel_literature_1940,
nobel_literature_1950,
nobel_literature_1960,
nobel_literature_1970,
nobel_literature_1980,
nobel_literature_1990,
nobel_literature_2000,
nobel_literature_2010
)
# calculation:
peace_mostfrequentwords50         <- frequentwordsincorpus(nobel_peace)
literature_mostfrequentwords50    <- frequentwordsincorpus(nobel_literature)
#most frequent words for prize overall through whole history
peace_word_frequencies_topfive    <- as.character(peace_mostfrequentwords50$word[1:numberofwords])
literature_frequencies_topfive    <- as.character(literature_mostfrequentwords50$word[1:numberofwords])
#setup matrices word x decades
peace_word_by_decades             <- compute_word_frequencies_topfive_byyear(peace_word_frequencies_topfive)
literature_word_by_decades        <- compute_word_frequencies_topfive_byyear(literature_frequencies_topfive)
#dataframe for plotting in ggvis package
peace_word_frequencies_topfive             <- data.frame(t(peace_word_by_decades))
peace_word_frequencies_topfive$years       <- rownames(peace_word_frequencies_topfive)
peace_column_names                         <- c(names(peace_word_frequencies_topfive))
literature_word_frequencies_topfive        <- data.frame(t(literature_word_by_decades))
literature_word_frequencies_topfive$years  <- rownames(literature_word_frequencies_topfive)
literature_column_names                    <- c(names(literature_word_frequencies_topfive))
peace_word_frequencies_topfive
years
frequencies
